name: Build phase-1-cli

on:
  push:
    branches:
      - master
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read

env:
  GIT_LFS_SKIP_SMUDGE: 1

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        nightly_version: [nightly-2022-05-27]
        make: 
          - name: Build Trusted Setup CLI
            command: cargo build --release --bin phase1 --features=cli
            cache_key: trusted-setup
            cache_version: v1

    env:
      CARGO_INCREMENTAL: 0
      RUST_BACKTRACE: full
      RUSTC_WRAPPER: sccache
      SCCACHE_CACHE_SIZE: 100G
      SCCACHE_BUCKET: trusted-setup-sccache-master

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::375643557360:role/trusted-setup-github-action-ci-master
          aws-region: eu-west-1
      - name: Install sccache (ubuntu-latest)
        if: matrix.os == 'ubuntu-latest'
        env:
          LINK: https://github.com/mozilla/sccache/releases/download
          SCCACHE_VERSION: v0.3.0
        run: |
          SCCACHE_FILE=sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl
          mkdir -p $HOME/.local/bin
          curl -L "$LINK/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
          mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
          chmod +x $HOME/.local/bin/sccache
          echo "$HOME/.local/bin" >> $GITHUB_PATH          
      - name: Install sccache (macos-latest)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install sccache
      - name: Setup rust toolchain
        uses: oxidecomputer/actions-rs_toolchain@ad3f86084a8a5acf2c09cb691421b31cf8af7a36
        with:
          profile: default
          override: true
      - name: Setup rust nightly
        uses: oxidecomputer/actions-rs_toolchain@ad3f86084a8a5acf2c09cb691421b31cf8af7a36
        with:
          toolchain: ${{ matrix.nightly_version }}
          profile: default
      - name: Cache cargo registry
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git          
          key: ${{ runner.os }}-${{ matrix.make.cache_key }}-${{ matrix.make.cache_version }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.make.cache_key }}-${{ matrix.make.cache_version }}-cargo-
      - name: Start sccache server
        run: sccache --start-server
      - name: ${{ matrix.make.name }}
        run: ${{ matrix.make.command }}
      - name: Upload binaries
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        uses: actions/upload-artifact@v3
        with:
          name: trusted-setup-cli-${{ matrix.os }}-${{ github.sha }}
          path: target/release/phase1
          retention-days: 7
      - name: Upload binaries
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/upload-artifact@v3
        with:
          name: trusted-setup-cli-${{ matrix.os }}-${{ github.sha }}
          path: target/release/phase1
          retention-days: 2
      - name: Print sccache stats
        if: always()
        run: sccache --show-stats
      - name: Stop sccache server
        if: always()
        run: sccache --stop-server || true